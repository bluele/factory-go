// Code generated by MockGen. DO NOT EDIT.
// Source: factory.go

// Package factory is a generated GoMock package.
package factory

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockArgs is a mock of Args interface.
type MockArgs struct {
	ctrl     *gomock.Controller
	recorder *MockArgsMockRecorder
}

// MockArgsMockRecorder is the mock recorder for MockArgs.
type MockArgsMockRecorder struct {
	mock *MockArgs
}

// NewMockArgs creates a new mock instance.
func NewMockArgs(ctrl *gomock.Controller) *MockArgs {
	mock := &MockArgs{ctrl: ctrl}
	mock.recorder = &MockArgsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockArgs) EXPECT() *MockArgsMockRecorder {
	return m.recorder
}

// Context mocks base method.
func (m *MockArgs) Context() context.Context {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Context")
	ret0, _ := ret[0].(context.Context)
	return ret0
}

// Context indicates an expected call of Context.
func (mr *MockArgsMockRecorder) Context() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Context", reflect.TypeOf((*MockArgs)(nil).Context))
}

// Instance mocks base method.
func (m *MockArgs) Instance() any {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Instance")
	ret0, _ := ret[0].(any)
	return ret0
}

// Instance indicates an expected call of Instance.
func (mr *MockArgsMockRecorder) Instance() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Instance", reflect.TypeOf((*MockArgs)(nil).Instance))
}

// Parent mocks base method.
func (m *MockArgs) Parent() Args {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Parent")
	ret0, _ := ret[0].(Args)
	return ret0
}

// Parent indicates an expected call of Parent.
func (mr *MockArgsMockRecorder) Parent() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Parent", reflect.TypeOf((*MockArgs)(nil).Parent))
}

// pipeline mocks base method.
func (m *MockArgs) pipeline(arg0 int) *pipeline {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "pipeline", arg0)
	ret0, _ := ret[0].(*pipeline)
	return ret0
}

// pipeline indicates an expected call of pipeline.
func (mr *MockArgsMockRecorder) pipeline(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "pipeline", reflect.TypeOf((*MockArgs)(nil).pipeline), arg0)
}
